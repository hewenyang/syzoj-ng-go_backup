/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
var syzoj_model_pb = require('./syzoj.model_pb.js');
goog.exportSymbol('proto.syzoj.api.DebugAddJudgerRequest', null, global);
goog.exportSymbol('proto.syzoj.api.DebugAddJudgerResponse', null, global);
goog.exportSymbol('proto.syzoj.api.Error', null, global);
goog.exportSymbol('proto.syzoj.api.IndexPage', null, global);
goog.exportSymbol('proto.syzoj.api.LoginPage', null, global);
goog.exportSymbol('proto.syzoj.api.LoginPage.LoginRequest', null, global);
goog.exportSymbol('proto.syzoj.api.Mutation', null, global);
goog.exportSymbol('proto.syzoj.api.NotFoundPage', null, global);
goog.exportSymbol('proto.syzoj.api.Path', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemCreatePage', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemCreatePage.CreateRequest', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage.AddSourceRequest', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage.AddStatementRequest', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage.ProblemEntry', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage.SetPublicRequest', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemsPage', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemsPage.AddProblemRequest', null, global);
goog.exportSymbol('proto.syzoj.api.ProblemsPage.ProblemEntry', null, global);
goog.exportSymbol('proto.syzoj.api.RegisterPage', null, global);
goog.exportSymbol('proto.syzoj.api.RegisterPage.RegisterRequest', null, global);
goog.exportSymbol('proto.syzoj.api.Response', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.syzoj.api.Response.repeatedFields_, null);
};
goog.inherits(proto.syzoj.api.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.Response.displayName = 'proto.syzoj.api.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.syzoj.api.Response.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    mutationsList: jspb.Message.toObjectList(msg.getMutationsList(),
    proto.syzoj.api.Mutation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.Response}
 */
proto.syzoj.api.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.Response;
  return proto.syzoj.api.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.Response}
 */
proto.syzoj.api.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.syzoj.api.Mutation;
      reader.readMessage(value,proto.syzoj.api.Mutation.deserializeBinaryFromReader);
      msg.addMutations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMutationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.syzoj.api.Mutation.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Mutation mutations = 3;
 * @return {!Array<!proto.syzoj.api.Mutation>}
 */
proto.syzoj.api.Response.prototype.getMutationsList = function() {
  return /** @type{!Array<!proto.syzoj.api.Mutation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.syzoj.api.Mutation, 3));
};


/** @param {!Array<!proto.syzoj.api.Mutation>} value */
proto.syzoj.api.Response.prototype.setMutationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.syzoj.api.Mutation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.syzoj.api.Mutation}
 */
proto.syzoj.api.Response.prototype.addMutations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.syzoj.api.Mutation, opt_index);
};


proto.syzoj.api.Response.prototype.clearMutationsList = function() {
  this.setMutationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.Mutation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.Mutation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.Mutation.displayName = 'proto.syzoj.api.Mutation';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.Mutation.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.Mutation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.Mutation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Mutation.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getField(msg, 1),
    method: jspb.Message.getField(msg, 2),
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.Mutation}
 */
proto.syzoj.api.Mutation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.Mutation;
  return proto.syzoj.api.Mutation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.Mutation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.Mutation}
 */
proto.syzoj.api.Mutation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.Mutation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.Mutation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.Mutation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Mutation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.syzoj.api.Mutation.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.Mutation.prototype.setPath = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.Mutation.prototype.clearPath = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.Mutation.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.syzoj.api.Mutation.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.syzoj.api.Mutation.prototype.setMethod = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.syzoj.api.Mutation.prototype.clearMethod = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.Mutation.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Any value = 3;
 * @return {?proto.google.protobuf.Any}
 */
proto.syzoj.api.Mutation.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.syzoj.api.Mutation.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.syzoj.api.Mutation.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.Mutation.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.Error.displayName = 'proto.syzoj.api.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.Error}
 */
proto.syzoj.api.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.Error;
  return proto.syzoj.api.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.Error}
 */
proto.syzoj.api.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.syzoj.api.Error.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.Error.prototype.setError = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.Error.prototype.clearError = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.Error.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.Path = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.Path, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.Path.displayName = 'proto.syzoj.api.Path';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.Path.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.Path.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.Path} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Path.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.Path}
 */
proto.syzoj.api.Path.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.Path;
  return proto.syzoj.api.Path.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.Path} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.Path}
 */
proto.syzoj.api.Path.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.Path.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.Path.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.Path} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.Path.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.syzoj.api.Path.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.Path.prototype.setPath = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.Path.prototype.clearPath = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.Path.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.NotFoundPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.NotFoundPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.NotFoundPage.displayName = 'proto.syzoj.api.NotFoundPage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.NotFoundPage.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.NotFoundPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.NotFoundPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.NotFoundPage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.NotFoundPage}
 */
proto.syzoj.api.NotFoundPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.NotFoundPage;
  return proto.syzoj.api.NotFoundPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.NotFoundPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.NotFoundPage}
 */
proto.syzoj.api.NotFoundPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.NotFoundPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.NotFoundPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.NotFoundPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.NotFoundPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.IndexPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.IndexPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.IndexPage.displayName = 'proto.syzoj.api.IndexPage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.IndexPage.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.IndexPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.IndexPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.IndexPage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.IndexPage}
 */
proto.syzoj.api.IndexPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.IndexPage;
  return proto.syzoj.api.IndexPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.IndexPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.IndexPage}
 */
proto.syzoj.api.IndexPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.IndexPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.IndexPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.IndexPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.IndexPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.LoginPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.LoginPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.LoginPage.displayName = 'proto.syzoj.api.LoginPage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.LoginPage.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.LoginPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.LoginPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.LoginPage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.LoginPage}
 */
proto.syzoj.api.LoginPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.LoginPage;
  return proto.syzoj.api.LoginPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.LoginPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.LoginPage}
 */
proto.syzoj.api.LoginPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.LoginPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.LoginPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.LoginPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.LoginPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.LoginPage.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.LoginPage.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.LoginPage.LoginRequest.displayName = 'proto.syzoj.api.LoginPage.LoginRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.LoginPage.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.LoginPage.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.LoginPage.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.LoginPage.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getField(msg, 1),
    password: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.LoginPage.LoginRequest}
 */
proto.syzoj.api.LoginPage.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.LoginPage.LoginRequest;
  return proto.syzoj.api.LoginPage.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.LoginPage.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.LoginPage.LoginRequest}
 */
proto.syzoj.api.LoginPage.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.LoginPage.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.LoginPage.LoginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.LoginPage.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.LoginPage.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.syzoj.api.LoginPage.LoginRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.LoginPage.LoginRequest.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.LoginPage.LoginRequest.prototype.clearUserName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.LoginPage.LoginRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.syzoj.api.LoginPage.LoginRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.syzoj.api.LoginPage.LoginRequest.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.syzoj.api.LoginPage.LoginRequest.prototype.clearPassword = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.LoginPage.LoginRequest.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.RegisterPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.RegisterPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.RegisterPage.displayName = 'proto.syzoj.api.RegisterPage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.RegisterPage.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.RegisterPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.RegisterPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.RegisterPage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.RegisterPage}
 */
proto.syzoj.api.RegisterPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.RegisterPage;
  return proto.syzoj.api.RegisterPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.RegisterPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.RegisterPage}
 */
proto.syzoj.api.RegisterPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.RegisterPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.RegisterPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.RegisterPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.RegisterPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.RegisterPage.RegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.RegisterPage.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.RegisterPage.RegisterRequest.displayName = 'proto.syzoj.api.RegisterPage.RegisterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.RegisterPage.RegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.RegisterPage.RegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.RegisterPage.RegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getField(msg, 1),
    password: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.RegisterPage.RegisterRequest}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.RegisterPage.RegisterRequest;
  return proto.syzoj.api.RegisterPage.RegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.RegisterPage.RegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.RegisterPage.RegisterRequest}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.RegisterPage.RegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.RegisterPage.RegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.RegisterPage.RegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.RegisterPage.RegisterRequest.prototype.clearUserName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.hasUserName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.syzoj.api.RegisterPage.RegisterRequest.prototype.clearPassword = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.RegisterPage.RegisterRequest.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemCreatePage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemCreatePage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemCreatePage.displayName = 'proto.syzoj.api.ProblemCreatePage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemCreatePage.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemCreatePage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemCreatePage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemCreatePage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemCreatePage}
 */
proto.syzoj.api.ProblemCreatePage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemCreatePage;
  return proto.syzoj.api.ProblemCreatePage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemCreatePage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemCreatePage}
 */
proto.syzoj.api.ProblemCreatePage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemCreatePage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemCreatePage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemCreatePage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemCreatePage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemCreatePage.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemCreatePage.CreateRequest.displayName = 'proto.syzoj.api.ProblemCreatePage.CreateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemCreatePage.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemCreatePage.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    problemTitle: jspb.Message.getField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemCreatePage.CreateRequest}
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemCreatePage.CreateRequest;
  return proto.syzoj.api.ProblemCreatePage.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemCreatePage.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemCreatePage.CreateRequest}
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemCreatePage.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemCreatePage.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string problem_title = 16;
 * @return {string}
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.prototype.getProblemTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.syzoj.api.ProblemCreatePage.CreateRequest.prototype.setProblemTitle = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.syzoj.api.ProblemCreatePage.CreateRequest.prototype.clearProblemTitle = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemCreatePage.CreateRequest.prototype.hasProblemTitle = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.syzoj.api.ProblemViewPage.repeatedFields_, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.displayName = 'proto.syzoj.api.ProblemViewPage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.syzoj.api.ProblemViewPage.repeatedFields_ = [18,20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    problemTitle: jspb.Message.getField(msg, 16),
    problemStatement: (f = msg.getProblemStatement()) && syzoj_model_pb.ProblemStatement.toObject(includeInstance, f),
    problemSourceList: jspb.Message.toObjectList(msg.getProblemSourceList(),
    syzoj_model_pb.ProblemSource.toObject, includeInstance),
    problemJudge: (f = msg.getProblemJudge()) && syzoj_model_pb.ProblemJudge.toObject(includeInstance, f),
    problemEntryList: jspb.Message.toObjectList(msg.getProblemEntryList(),
    proto.syzoj.api.ProblemViewPage.ProblemEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage}
 */
proto.syzoj.api.ProblemViewPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage;
  return proto.syzoj.api.ProblemViewPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage}
 */
proto.syzoj.api.ProblemViewPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemTitle(value);
      break;
    case 17:
      var value = new syzoj_model_pb.ProblemStatement;
      reader.readMessage(value,syzoj_model_pb.ProblemStatement.deserializeBinaryFromReader);
      msg.setProblemStatement(value);
      break;
    case 18:
      var value = new syzoj_model_pb.ProblemSource;
      reader.readMessage(value,syzoj_model_pb.ProblemSource.deserializeBinaryFromReader);
      msg.addProblemSource(value);
      break;
    case 19:
      var value = new syzoj_model_pb.ProblemJudge;
      reader.readMessage(value,syzoj_model_pb.ProblemJudge.deserializeBinaryFromReader);
      msg.setProblemJudge(value);
      break;
    case 20:
      var value = new proto.syzoj.api.ProblemViewPage.ProblemEntry;
      reader.readMessage(value,proto.syzoj.api.ProblemViewPage.ProblemEntry.deserializeBinaryFromReader);
      msg.addProblemEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getProblemStatement();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      syzoj_model_pb.ProblemStatement.serializeBinaryToWriter
    );
  }
  f = message.getProblemSourceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      syzoj_model_pb.ProblemSource.serializeBinaryToWriter
    );
  }
  f = message.getProblemJudge();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      syzoj_model_pb.ProblemJudge.serializeBinaryToWriter
    );
  }
  f = message.getProblemEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.syzoj.api.ProblemViewPage.ProblemEntry.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage.ProblemEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.ProblemEntry.displayName = 'proto.syzoj.api.ProblemViewPage.ProblemEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.ProblemEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage.ProblemEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage.ProblemEntry}
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage.ProblemEntry;
  return proto.syzoj.api.ProblemViewPage.ProblemEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage.ProblemEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage.ProblemEntry}
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.ProblemEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage.ProblemEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.ProblemViewPage.ProblemEntry.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.ProblemViewPage.ProblemEntry.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.ProblemEntry.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage.AddStatementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.AddStatementRequest.displayName = 'proto.syzoj.api.ProblemViewPage.AddStatementRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.AddStatementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage.AddStatementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    statement: (f = msg.getStatement()) && syzoj_model_pb.ProblemStatement.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage.AddStatementRequest}
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage.AddStatementRequest;
  return proto.syzoj.api.ProblemViewPage.AddStatementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage.AddStatementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage.AddStatementRequest}
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new syzoj_model_pb.ProblemStatement;
      reader.readMessage(value,syzoj_model_pb.ProblemStatement.deserializeBinaryFromReader);
      msg.setStatement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.AddStatementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage.AddStatementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatement();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      syzoj_model_pb.ProblemStatement.serializeBinaryToWriter
    );
  }
};


/**
 * optional syzoj.model.ProblemStatement statement = 1;
 * @return {?proto.syzoj.model.ProblemStatement}
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.prototype.getStatement = function() {
  return /** @type{?proto.syzoj.model.ProblemStatement} */ (
    jspb.Message.getWrapperField(this, syzoj_model_pb.ProblemStatement, 1));
};


/** @param {?proto.syzoj.model.ProblemStatement|undefined} value */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.prototype.setStatement = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.syzoj.api.ProblemViewPage.AddStatementRequest.prototype.clearStatement = function() {
  this.setStatement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.AddStatementRequest.prototype.hasStatement = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage.AddSourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.AddSourceRequest.displayName = 'proto.syzoj.api.ProblemViewPage.AddSourceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.AddSourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage.AddSourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: (f = msg.getSource()) && syzoj_model_pb.ProblemSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage.AddSourceRequest}
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage.AddSourceRequest;
  return proto.syzoj.api.ProblemViewPage.AddSourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage.AddSourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage.AddSourceRequest}
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new syzoj_model_pb.ProblemSource;
      reader.readMessage(value,syzoj_model_pb.ProblemSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.AddSourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage.AddSourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      syzoj_model_pb.ProblemSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional syzoj.model.ProblemSource source = 1;
 * @return {?proto.syzoj.model.ProblemSource}
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.prototype.getSource = function() {
  return /** @type{?proto.syzoj.model.ProblemSource} */ (
    jspb.Message.getWrapperField(this, syzoj_model_pb.ProblemSource, 1));
};


/** @param {?proto.syzoj.model.ProblemSource|undefined} value */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.prototype.setSource = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.syzoj.api.ProblemViewPage.AddSourceRequest.prototype.clearSource = function() {
  this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.AddSourceRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage.SetPublicRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage.SetPublicRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.SetPublicRequest.displayName = 'proto.syzoj.api.ProblemViewPage.SetPublicRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.SetPublicRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.SetPublicRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage.SetPublicRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.SetPublicRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage.SetPublicRequest}
 */
proto.syzoj.api.ProblemViewPage.SetPublicRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage.SetPublicRequest;
  return proto.syzoj.api.ProblemViewPage.SetPublicRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage.SetPublicRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage.SetPublicRequest}
 */
proto.syzoj.api.ProblemViewPage.SetPublicRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.SetPublicRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.SetPublicRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage.SetPublicRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.SetPublicRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.displayName = 'proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && syzoj_model_pb.TraditionalJudgeData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest}
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest;
  return proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest}
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new syzoj_model_pb.TraditionalJudgeData;
      reader.readMessage(value,syzoj_model_pb.TraditionalJudgeData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      syzoj_model_pb.TraditionalJudgeData.serializeBinaryToWriter
    );
  }
};


/**
 * optional syzoj.model.TraditionalJudgeData data = 1;
 * @return {?proto.syzoj.model.TraditionalJudgeData}
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.prototype.getData = function() {
  return /** @type{?proto.syzoj.model.TraditionalJudgeData} */ (
    jspb.Message.getWrapperField(this, syzoj_model_pb.TraditionalJudgeData, 1));
};


/** @param {?proto.syzoj.model.TraditionalJudgeData|undefined} value */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.AddJudgeTraditionalRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.displayName = 'proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: (f = msg.getCode()) && syzoj_model_pb.TraditionalJudgeCode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest;
  return proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new syzoj_model_pb.TraditionalJudgeCode;
      reader.readMessage(value,syzoj_model_pb.TraditionalJudgeCode.deserializeBinaryFromReader);
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      syzoj_model_pb.TraditionalJudgeCode.serializeBinaryToWriter
    );
  }
};


/**
 * optional syzoj.model.TraditionalJudgeCode code = 1;
 * @return {?proto.syzoj.model.TraditionalJudgeCode}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.prototype.getCode = function() {
  return /** @type{?proto.syzoj.model.TraditionalJudgeCode} */ (
    jspb.Message.getWrapperField(this, syzoj_model_pb.TraditionalJudgeCode, 1));
};


/** @param {?proto.syzoj.model.TraditionalJudgeCode|undefined} value */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.prototype.setCode = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.prototype.clearCode = function() {
  this.setCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalRequest.prototype.hasCode = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.displayName = 'proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse;
  return proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemViewPage.SubmitJudgeTraditionalResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional string problem_title = 16;
 * @return {string}
 */
proto.syzoj.api.ProblemViewPage.prototype.getProblemTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.syzoj.api.ProblemViewPage.prototype.setProblemTitle = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.syzoj.api.ProblemViewPage.prototype.clearProblemTitle = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.prototype.hasProblemTitle = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional syzoj.model.ProblemStatement problem_statement = 17;
 * @return {?proto.syzoj.model.ProblemStatement}
 */
proto.syzoj.api.ProblemViewPage.prototype.getProblemStatement = function() {
  return /** @type{?proto.syzoj.model.ProblemStatement} */ (
    jspb.Message.getWrapperField(this, syzoj_model_pb.ProblemStatement, 17));
};


/** @param {?proto.syzoj.model.ProblemStatement|undefined} value */
proto.syzoj.api.ProblemViewPage.prototype.setProblemStatement = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.syzoj.api.ProblemViewPage.prototype.clearProblemStatement = function() {
  this.setProblemStatement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.prototype.hasProblemStatement = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated syzoj.model.ProblemSource problem_source = 18;
 * @return {!Array<!proto.syzoj.model.ProblemSource>}
 */
proto.syzoj.api.ProblemViewPage.prototype.getProblemSourceList = function() {
  return /** @type{!Array<!proto.syzoj.model.ProblemSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, syzoj_model_pb.ProblemSource, 18));
};


/** @param {!Array<!proto.syzoj.model.ProblemSource>} value */
proto.syzoj.api.ProblemViewPage.prototype.setProblemSourceList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.syzoj.model.ProblemSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.syzoj.model.ProblemSource}
 */
proto.syzoj.api.ProblemViewPage.prototype.addProblemSource = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.syzoj.model.ProblemSource, opt_index);
};


proto.syzoj.api.ProblemViewPage.prototype.clearProblemSourceList = function() {
  this.setProblemSourceList([]);
};


/**
 * optional syzoj.model.ProblemJudge problem_judge = 19;
 * @return {?proto.syzoj.model.ProblemJudge}
 */
proto.syzoj.api.ProblemViewPage.prototype.getProblemJudge = function() {
  return /** @type{?proto.syzoj.model.ProblemJudge} */ (
    jspb.Message.getWrapperField(this, syzoj_model_pb.ProblemJudge, 19));
};


/** @param {?proto.syzoj.model.ProblemJudge|undefined} value */
proto.syzoj.api.ProblemViewPage.prototype.setProblemJudge = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


proto.syzoj.api.ProblemViewPage.prototype.clearProblemJudge = function() {
  this.setProblemJudge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemViewPage.prototype.hasProblemJudge = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated ProblemEntry problem_entry = 20;
 * @return {!Array<!proto.syzoj.api.ProblemViewPage.ProblemEntry>}
 */
proto.syzoj.api.ProblemViewPage.prototype.getProblemEntryList = function() {
  return /** @type{!Array<!proto.syzoj.api.ProblemViewPage.ProblemEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.syzoj.api.ProblemViewPage.ProblemEntry, 20));
};


/** @param {!Array<!proto.syzoj.api.ProblemViewPage.ProblemEntry>} value */
proto.syzoj.api.ProblemViewPage.prototype.setProblemEntryList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.syzoj.api.ProblemViewPage.ProblemEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.syzoj.api.ProblemViewPage.ProblemEntry}
 */
proto.syzoj.api.ProblemViewPage.prototype.addProblemEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.syzoj.api.ProblemViewPage.ProblemEntry, opt_index);
};


proto.syzoj.api.ProblemViewPage.prototype.clearProblemEntryList = function() {
  this.setProblemEntryList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemsPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.syzoj.api.ProblemsPage.repeatedFields_, null);
};
goog.inherits(proto.syzoj.api.ProblemsPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemsPage.displayName = 'proto.syzoj.api.ProblemsPage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.syzoj.api.ProblemsPage.repeatedFields_ = [16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemsPage.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemsPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemsPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemsPage.toObject = function(includeInstance, msg) {
  var f, obj = {
    problemEntryList: jspb.Message.toObjectList(msg.getProblemEntryList(),
    proto.syzoj.api.ProblemsPage.ProblemEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemsPage}
 */
proto.syzoj.api.ProblemsPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemsPage;
  return proto.syzoj.api.ProblemsPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemsPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemsPage}
 */
proto.syzoj.api.ProblemsPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 16:
      var value = new proto.syzoj.api.ProblemsPage.ProblemEntry;
      reader.readMessage(value,proto.syzoj.api.ProblemsPage.ProblemEntry.deserializeBinaryFromReader);
      msg.addProblemEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemsPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemsPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemsPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemsPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProblemEntryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.syzoj.api.ProblemsPage.ProblemEntry.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemsPage.ProblemEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemsPage.ProblemEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemsPage.ProblemEntry.displayName = 'proto.syzoj.api.ProblemsPage.ProblemEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemsPage.ProblemEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemsPage.ProblemEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    problemId: jspb.Message.getField(msg, 2),
    problemTitle: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemsPage.ProblemEntry}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemsPage.ProblemEntry;
  return proto.syzoj.api.ProblemsPage.ProblemEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemsPage.ProblemEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemsPage.ProblemEntry}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemsPage.ProblemEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemsPage.ProblemEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string problem_id = 2;
 * @return {string}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.getProblemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.setProblemId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.clearProblemId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.hasProblemId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string problem_title = 3;
 * @return {string}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.getProblemTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.setProblemTitle = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.clearProblemTitle = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemsPage.ProblemEntry.prototype.hasProblemTitle = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.ProblemsPage.AddProblemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.ProblemsPage.AddProblemRequest.displayName = 'proto.syzoj.api.ProblemsPage.AddProblemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.ProblemsPage.AddProblemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.ProblemsPage.AddProblemRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    problemId: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.ProblemsPage.AddProblemRequest}
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.ProblemsPage.AddProblemRequest;
  return proto.syzoj.api.ProblemsPage.AddProblemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.ProblemsPage.AddProblemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.ProblemsPage.AddProblemRequest}
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProblemId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.ProblemsPage.AddProblemRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.ProblemsPage.AddProblemRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string problem_id = 1;
 * @return {string}
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.prototype.getProblemId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.ProblemsPage.AddProblemRequest.prototype.setProblemId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.ProblemsPage.AddProblemRequest.prototype.clearProblemId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.ProblemsPage.AddProblemRequest.prototype.hasProblemId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ProblemEntry problem_entry = 16;
 * @return {!Array<!proto.syzoj.api.ProblemsPage.ProblemEntry>}
 */
proto.syzoj.api.ProblemsPage.prototype.getProblemEntryList = function() {
  return /** @type{!Array<!proto.syzoj.api.ProblemsPage.ProblemEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.syzoj.api.ProblemsPage.ProblemEntry, 16));
};


/** @param {!Array<!proto.syzoj.api.ProblemsPage.ProblemEntry>} value */
proto.syzoj.api.ProblemsPage.prototype.setProblemEntryList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.syzoj.api.ProblemsPage.ProblemEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.syzoj.api.ProblemsPage.ProblemEntry}
 */
proto.syzoj.api.ProblemsPage.prototype.addProblemEntry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.syzoj.api.ProblemsPage.ProblemEntry, opt_index);
};


proto.syzoj.api.ProblemsPage.prototype.clearProblemEntryList = function() {
  this.setProblemEntryList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.DebugAddJudgerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.DebugAddJudgerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.DebugAddJudgerRequest.displayName = 'proto.syzoj.api.DebugAddJudgerRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.DebugAddJudgerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.DebugAddJudgerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.DebugAddJudgerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.DebugAddJudgerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.DebugAddJudgerRequest}
 */
proto.syzoj.api.DebugAddJudgerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.DebugAddJudgerRequest;
  return proto.syzoj.api.DebugAddJudgerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.DebugAddJudgerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.DebugAddJudgerRequest}
 */
proto.syzoj.api.DebugAddJudgerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.DebugAddJudgerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.DebugAddJudgerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.DebugAddJudgerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.DebugAddJudgerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.syzoj.api.DebugAddJudgerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.syzoj.api.DebugAddJudgerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.syzoj.api.DebugAddJudgerResponse.displayName = 'proto.syzoj.api.DebugAddJudgerResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.syzoj.api.DebugAddJudgerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.syzoj.api.DebugAddJudgerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.syzoj.api.DebugAddJudgerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.DebugAddJudgerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    judgerId: jspb.Message.getField(msg, 1),
    judgerToken: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.syzoj.api.DebugAddJudgerResponse}
 */
proto.syzoj.api.DebugAddJudgerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.syzoj.api.DebugAddJudgerResponse;
  return proto.syzoj.api.DebugAddJudgerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.syzoj.api.DebugAddJudgerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.syzoj.api.DebugAddJudgerResponse}
 */
proto.syzoj.api.DebugAddJudgerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJudgerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJudgerToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.syzoj.api.DebugAddJudgerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.syzoj.api.DebugAddJudgerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.syzoj.api.DebugAddJudgerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.syzoj.api.DebugAddJudgerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string judger_id = 1;
 * @return {string}
 */
proto.syzoj.api.DebugAddJudgerResponse.prototype.getJudgerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.syzoj.api.DebugAddJudgerResponse.prototype.setJudgerId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.syzoj.api.DebugAddJudgerResponse.prototype.clearJudgerId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.DebugAddJudgerResponse.prototype.hasJudgerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string judger_token = 2;
 * @return {string}
 */
proto.syzoj.api.DebugAddJudgerResponse.prototype.getJudgerToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.syzoj.api.DebugAddJudgerResponse.prototype.setJudgerToken = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.syzoj.api.DebugAddJudgerResponse.prototype.clearJudgerToken = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.syzoj.api.DebugAddJudgerResponse.prototype.hasJudgerToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.syzoj.api);
