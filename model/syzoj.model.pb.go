// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: syzoj.model.proto

package model // import "github.com/syzoj/syzoj-ng-go/model"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import judge "github.com/syzoj/syzoj-ng-go/model/judge"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type UserAuth struct {
	PasswordHash         []byte   `protobuf:"bytes,1,opt,name=password_hash,json=passwordHash" json:"password_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAuth) Reset()         { *m = UserAuth{} }
func (m *UserAuth) String() string { return proto.CompactTextString(m) }
func (*UserAuth) ProtoMessage()    {}
func (*UserAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{0}
}
func (m *UserAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UserAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAuth.Merge(dst, src)
}
func (m *UserAuth) XXX_Size() int {
	return m.Size()
}
func (m *UserAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAuth.DiscardUnknown(m)
}

var xxx_messageInfo_UserAuth proto.InternalMessageInfo

func (m *UserAuth) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

type DeviceInfo struct {
	Token                *string  `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	UserAgent            *string  `protobuf:"bytes,16,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	RemoteAddr           *string  `protobuf:"bytes,17,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{1}
}
func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(dst, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return m.Size()
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *DeviceInfo) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *DeviceInfo) GetRemoteAddr() string {
	if m != nil && m.RemoteAddr != nil {
		return *m.RemoteAddr
	}
	return ""
}

type Problemset struct {
	Id                   *string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title                *string    `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Problem              []*Problem `protobuf:"bytes,3,rep,name=problem" json:"problem,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Problemset) Reset()         { *m = Problemset{} }
func (m *Problemset) String() string { return proto.CompactTextString(m) }
func (*Problemset) ProtoMessage()    {}
func (*Problemset) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{2}
}
func (m *Problemset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Problemset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Problemset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Problemset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Problemset.Merge(dst, src)
}
func (m *Problemset) XXX_Size() int {
	return m.Size()
}
func (m *Problemset) XXX_DiscardUnknown() {
	xxx_messageInfo_Problemset.DiscardUnknown(m)
}

var xxx_messageInfo_Problemset proto.InternalMessageInfo

func (m *Problemset) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Problemset) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Problemset) GetProblem() []*Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

type Problem struct {
	Id                   *string           `protobuf:"bytes,16,opt,name=id" json:"id,omitempty"`
	Title                *string           `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Statement            *ProblemStatement `protobuf:"bytes,2,opt,name=statement" json:"statement,omitempty"`
	Source               []*ProblemSource  `protobuf:"bytes,3,rep,name=source" json:"source,omitempty"`
	Judge                *ProblemJudge     `protobuf:"bytes,4,opt,name=judge" json:"judge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Problem) Reset()         { *m = Problem{} }
func (m *Problem) String() string { return proto.CompactTextString(m) }
func (*Problem) ProtoMessage()    {}
func (*Problem) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{3}
}
func (m *Problem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Problem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Problem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Problem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Problem.Merge(dst, src)
}
func (m *Problem) XXX_Size() int {
	return m.Size()
}
func (m *Problem) XXX_DiscardUnknown() {
	xxx_messageInfo_Problem.DiscardUnknown(m)
}

var xxx_messageInfo_Problem proto.InternalMessageInfo

func (m *Problem) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Problem) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Problem) GetStatement() *ProblemStatement {
	if m != nil {
		return m.Statement
	}
	return nil
}

func (m *Problem) GetSource() []*ProblemSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Problem) GetJudge() *ProblemJudge {
	if m != nil {
		return m.Judge
	}
	return nil
}

type ProblemJudge struct {
	// Types that are valid to be assigned to Judge:
	//	*ProblemJudge_Traditional
	Judge                isProblemJudge_Judge `protobuf_oneof:"judge"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ProblemJudge) Reset()         { *m = ProblemJudge{} }
func (m *ProblemJudge) String() string { return proto.CompactTextString(m) }
func (*ProblemJudge) ProtoMessage()    {}
func (*ProblemJudge) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{4}
}
func (m *ProblemJudge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProblemJudge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProblemJudge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ProblemJudge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemJudge.Merge(dst, src)
}
func (m *ProblemJudge) XXX_Size() int {
	return m.Size()
}
func (m *ProblemJudge) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemJudge.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemJudge proto.InternalMessageInfo

type isProblemJudge_Judge interface {
	isProblemJudge_Judge()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ProblemJudge_Traditional struct {
	Traditional *judge.TraditionalJudgeData `protobuf:"bytes,1,opt,name=traditional,oneof"`
}

func (*ProblemJudge_Traditional) isProblemJudge_Judge() {}

func (m *ProblemJudge) GetJudge() isProblemJudge_Judge {
	if m != nil {
		return m.Judge
	}
	return nil
}

func (m *ProblemJudge) GetTraditional() *judge.TraditionalJudgeData {
	if x, ok := m.GetJudge().(*ProblemJudge_Traditional); ok {
		return x.Traditional
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProblemJudge) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProblemJudge_OneofMarshaler, _ProblemJudge_OneofUnmarshaler, _ProblemJudge_OneofSizer, []interface{}{
		(*ProblemJudge_Traditional)(nil),
	}
}

func _ProblemJudge_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProblemJudge)
	// judge
	switch x := m.Judge.(type) {
	case *ProblemJudge_Traditional:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Traditional); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProblemJudge.Judge has unexpected type %T", x)
	}
	return nil
}

func _ProblemJudge_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProblemJudge)
	switch tag {
	case 1: // judge.traditional
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(judge.TraditionalJudgeData)
		err := b.DecodeMessage(msg)
		m.Judge = &ProblemJudge_Traditional{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProblemJudge_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProblemJudge)
	// judge
	switch x := m.Judge.(type) {
	case *ProblemJudge_Traditional:
		s := proto.Size(x.Traditional)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Submission struct {
	Result               *judge.JudgeResponse `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Submission) Reset()         { *m = Submission{} }
func (m *Submission) String() string { return proto.CompactTextString(m) }
func (*Submission) ProtoMessage()    {}
func (*Submission) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{5}
}
func (m *Submission) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Submission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Submission.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Submission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Submission.Merge(dst, src)
}
func (m *Submission) XXX_Size() int {
	return m.Size()
}
func (m *Submission) XXX_DiscardUnknown() {
	xxx_messageInfo_Submission.DiscardUnknown(m)
}

var xxx_messageInfo_Submission proto.InternalMessageInfo

func (m *Submission) GetResult() *judge.JudgeResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

// ProblemSource defines the content of a problem's source.
type ProblemSource struct {
	Url                  *string  `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	SiteName             *string  `protobuf:"bytes,2,opt,name=site_name,json=siteName" json:"site_name,omitempty"`
	SiteProblemTitle     *string  `protobuf:"bytes,3,opt,name=site_problem_title,json=siteProblemTitle" json:"site_problem_title,omitempty"`
	ContestName          *string  `protobuf:"bytes,4,opt,name=contest_name,json=contestName" json:"contest_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemSource) Reset()         { *m = ProblemSource{} }
func (m *ProblemSource) String() string { return proto.CompactTextString(m) }
func (*ProblemSource) ProtoMessage()    {}
func (*ProblemSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{6}
}
func (m *ProblemSource) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProblemSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProblemSource.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ProblemSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemSource.Merge(dst, src)
}
func (m *ProblemSource) XXX_Size() int {
	return m.Size()
}
func (m *ProblemSource) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemSource.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemSource proto.InternalMessageInfo

func (m *ProblemSource) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *ProblemSource) GetSiteName() string {
	if m != nil && m.SiteName != nil {
		return *m.SiteName
	}
	return ""
}

func (m *ProblemSource) GetSiteProblemTitle() string {
	if m != nil && m.SiteProblemTitle != nil {
		return *m.SiteProblemTitle
	}
	return ""
}

func (m *ProblemSource) GetContestName() string {
	if m != nil && m.ContestName != nil {
		return *m.ContestName
	}
	return ""
}

type ProblemStatement struct {
	// Types that are valid to be assigned to Statement:
	//	*ProblemStatement_Markdown
	Statement            isProblemStatement_Statement `protobuf_oneof:"statement"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ProblemStatement) Reset()         { *m = ProblemStatement{} }
func (m *ProblemStatement) String() string { return proto.CompactTextString(m) }
func (*ProblemStatement) ProtoMessage()    {}
func (*ProblemStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{7}
}
func (m *ProblemStatement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProblemStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProblemStatement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ProblemStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemStatement.Merge(dst, src)
}
func (m *ProblemStatement) XXX_Size() int {
	return m.Size()
}
func (m *ProblemStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemStatement.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemStatement proto.InternalMessageInfo

type isProblemStatement_Statement interface {
	isProblemStatement_Statement()
	MarshalTo([]byte) (int, error)
	Size() int
}

type ProblemStatement_Markdown struct {
	Markdown *MarkdownLatexDocument `protobuf:"bytes,16,opt,name=markdown,oneof"`
}

func (*ProblemStatement_Markdown) isProblemStatement_Statement() {}

func (m *ProblemStatement) GetStatement() isProblemStatement_Statement {
	if m != nil {
		return m.Statement
	}
	return nil
}

func (m *ProblemStatement) GetMarkdown() *MarkdownLatexDocument {
	if x, ok := m.GetStatement().(*ProblemStatement_Markdown); ok {
		return x.Markdown
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProblemStatement) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProblemStatement_OneofMarshaler, _ProblemStatement_OneofUnmarshaler, _ProblemStatement_OneofSizer, []interface{}{
		(*ProblemStatement_Markdown)(nil),
	}
}

func _ProblemStatement_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProblemStatement)
	// statement
	switch x := m.Statement.(type) {
	case *ProblemStatement_Markdown:
		_ = b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Markdown); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProblemStatement.Statement has unexpected type %T", x)
	}
	return nil
}

func _ProblemStatement_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProblemStatement)
	switch tag {
	case 16: // statement.markdown
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MarkdownLatexDocument)
		err := b.DecodeMessage(msg)
		m.Statement = &ProblemStatement_Markdown{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProblemStatement_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProblemStatement)
	// statement
	switch x := m.Statement.(type) {
	case *ProblemStatement_Markdown:
		s := proto.Size(x.Markdown)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MarkdownLatexDocument struct {
	Text                 *string  `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarkdownLatexDocument) Reset()         { *m = MarkdownLatexDocument{} }
func (m *MarkdownLatexDocument) String() string { return proto.CompactTextString(m) }
func (*MarkdownLatexDocument) ProtoMessage()    {}
func (*MarkdownLatexDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_syzoj_model_b6b0a435f49de508, []int{8}
}
func (m *MarkdownLatexDocument) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MarkdownLatexDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MarkdownLatexDocument.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *MarkdownLatexDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarkdownLatexDocument.Merge(dst, src)
}
func (m *MarkdownLatexDocument) XXX_Size() int {
	return m.Size()
}
func (m *MarkdownLatexDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_MarkdownLatexDocument.DiscardUnknown(m)
}

var xxx_messageInfo_MarkdownLatexDocument proto.InternalMessageInfo

func (m *MarkdownLatexDocument) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*UserAuth)(nil), "syzoj.model.UserAuth")
	proto.RegisterType((*DeviceInfo)(nil), "syzoj.model.DeviceInfo")
	proto.RegisterType((*Problemset)(nil), "syzoj.model.Problemset")
	proto.RegisterType((*Problem)(nil), "syzoj.model.Problem")
	proto.RegisterType((*ProblemJudge)(nil), "syzoj.model.ProblemJudge")
	proto.RegisterType((*Submission)(nil), "syzoj.model.Submission")
	proto.RegisterType((*ProblemSource)(nil), "syzoj.model.ProblemSource")
	proto.RegisterType((*ProblemStatement)(nil), "syzoj.model.ProblemStatement")
	proto.RegisterType((*MarkdownLatexDocument)(nil), "syzoj.model.MarkdownLatexDocument")
}
func (m *UserAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserAuth) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.PasswordHash != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(m.PasswordHash)))
		i += copy(dAtA[i:], m.PasswordHash)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DeviceInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeviceInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Token != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.Token)))
		i += copy(dAtA[i:], *m.Token)
	}
	if m.UserAgent != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.UserAgent)))
		i += copy(dAtA[i:], *m.UserAgent)
	}
	if m.RemoteAddr != nil {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.RemoteAddr)))
		i += copy(dAtA[i:], *m.RemoteAddr)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Problemset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Problemset) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.Id)))
		i += copy(dAtA[i:], *m.Id)
	}
	if m.Title != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if len(m.Problem) > 0 {
		for _, msg := range m.Problem {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSyzojModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Problem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Problem) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Title != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.Title)))
		i += copy(dAtA[i:], *m.Title)
	}
	if m.Statement != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(m.Statement.Size()))
		n1, err := m.Statement.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Source) > 0 {
		for _, msg := range m.Source {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintSyzojModel(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.Judge != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(m.Judge.Size()))
		n2, err := m.Judge.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.Id != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.Id)))
		i += copy(dAtA[i:], *m.Id)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProblemJudge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProblemJudge) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Judge != nil {
		nn3, err := m.Judge.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProblemJudge_Traditional) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Traditional != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(m.Traditional.Size()))
		n4, err := m.Traditional.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}
func (m *Submission) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Submission) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(m.Result.Size()))
		n5, err := m.Result.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProblemSource) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProblemSource) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Url != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.Url)))
		i += copy(dAtA[i:], *m.Url)
	}
	if m.SiteName != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.SiteName)))
		i += copy(dAtA[i:], *m.SiteName)
	}
	if m.SiteProblemTitle != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.SiteProblemTitle)))
		i += copy(dAtA[i:], *m.SiteProblemTitle)
	}
	if m.ContestName != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.ContestName)))
		i += copy(dAtA[i:], *m.ContestName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProblemStatement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProblemStatement) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Statement != nil {
		nn6, err := m.Statement.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += nn6
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ProblemStatement_Markdown) MarshalTo(dAtA []byte) (int, error) {
	i := 0
	if m.Markdown != nil {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(m.Markdown.Size()))
		n7, err := m.Markdown.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *MarkdownLatexDocument) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MarkdownLatexDocument) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Text != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintSyzojModel(dAtA, i, uint64(len(*m.Text)))
		i += copy(dAtA[i:], *m.Text)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintSyzojModel(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *UserAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PasswordHash != nil {
		l = len(m.PasswordHash)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeviceInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Token != nil {
		l = len(*m.Token)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.UserAgent != nil {
		l = len(*m.UserAgent)
		n += 2 + l + sovSyzojModel(uint64(l))
	}
	if m.RemoteAddr != nil {
		l = len(*m.RemoteAddr)
		n += 2 + l + sovSyzojModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Problemset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != nil {
		l = len(*m.Id)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if len(m.Problem) > 0 {
		for _, e := range m.Problem {
			l = e.Size()
			n += 1 + l + sovSyzojModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Problem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.Statement != nil {
		l = m.Statement.Size()
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if len(m.Source) > 0 {
		for _, e := range m.Source {
			l = e.Size()
			n += 1 + l + sovSyzojModel(uint64(l))
		}
	}
	if m.Judge != nil {
		l = m.Judge.Size()
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.Id != nil {
		l = len(*m.Id)
		n += 2 + l + sovSyzojModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProblemJudge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Judge != nil {
		n += m.Judge.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProblemJudge_Traditional) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Traditional != nil {
		l = m.Traditional.Size()
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	return n
}
func (m *Submission) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProblemSource) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.SiteName != nil {
		l = len(*m.SiteName)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.SiteProblemTitle != nil {
		l = len(*m.SiteProblemTitle)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.ContestName != nil {
		l = len(*m.ContestName)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProblemStatement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Statement != nil {
		n += m.Statement.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProblemStatement_Markdown) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Markdown != nil {
		l = m.Markdown.Size()
		n += 2 + l + sovSyzojModel(uint64(l))
	}
	return n
}
func (m *MarkdownLatexDocument) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Text != nil {
		l = len(*m.Text)
		n += 1 + l + sovSyzojModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSyzojModel(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozSyzojModel(x uint64) (n int) {
	return sovSyzojModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UserAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PasswordHash = append(m.PasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PasswordHash == nil {
				m.PasswordHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeviceInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeviceInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeviceInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Token = &s
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAgent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.UserAgent = &s
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RemoteAddr = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Problemset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Problemset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Problemset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Problem", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Problem = append(m.Problem, &Problem{})
			if err := m.Problem[len(m.Problem)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Problem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Problem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Problem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Statement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Statement == nil {
				m.Statement = &ProblemStatement{}
			}
			if err := m.Statement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = append(m.Source, &ProblemSource{})
			if err := m.Source[len(m.Source)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Judge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Judge == nil {
				m.Judge = &ProblemJudge{}
			}
			if err := m.Judge.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProblemJudge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProblemJudge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProblemJudge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Traditional", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &judge.TraditionalJudgeData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Judge = &ProblemJudge_Traditional{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Submission) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Submission: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Submission: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &judge.JudgeResponse{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProblemSource) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProblemSource: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProblemSource: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SiteName = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteProblemTitle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SiteProblemTitle = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContestName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ContestName = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProblemStatement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProblemStatement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProblemStatement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Markdown", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &MarkdownLatexDocument{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Statement = &ProblemStatement_Markdown{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MarkdownLatexDocument) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MarkdownLatexDocument: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MarkdownLatexDocument: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSyzojModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Text = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSyzojModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSyzojModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSyzojModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSyzojModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSyzojModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthSyzojModel
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowSyzojModel
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipSyzojModel(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthSyzojModel = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSyzojModel   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("syzoj.model.proto", fileDescriptor_syzoj_model_b6b0a435f49de508) }

var fileDescriptor_syzoj_model_b6b0a435f49de508 = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xcf, 0x6e, 0x12, 0x41,
	0x18, 0xef, 0x02, 0x15, 0xf8, 0x96, 0x1a, 0x3a, 0xa9, 0xc9, 0x8a, 0x29, 0xb6, 0xeb, 0xa5, 0x89,
	0x76, 0x31, 0x5c, 0xbd, 0x14, 0x82, 0x09, 0x1a, 0x35, 0x66, 0x5b, 0x2f, 0x1e, 0x24, 0x03, 0xf3,
	0x09, 0xdb, 0xee, 0xce, 0x90, 0x99, 0x59, 0x5b, 0x7d, 0x09, 0x5f, 0xcb, 0xa3, 0xbe, 0x81, 0xe1,
	0x49, 0xcc, 0xcc, 0x0e, 0xb2, 0x34, 0x5c, 0x36, 0xbb, 0xbf, 0x7f, 0xdf, 0xbf, 0x85, 0x43, 0xf5,
	0xfd, 0x87, 0xb8, 0x8e, 0x32, 0xc1, 0x30, 0x8d, 0x96, 0x52, 0x68, 0x41, 0xfc, 0x12, 0xd4, 0x71,
	0xfc, 0x75, 0xce, 0xe6, 0x58, 0xf0, 0x61, 0x0f, 0x1a, 0x9f, 0x14, 0xca, 0x41, 0xae, 0x17, 0xe4,
	0x19, 0x1c, 0x2c, 0xa9, 0x52, 0xb7, 0x42, 0xb2, 0xc9, 0x82, 0xaa, 0x45, 0xe0, 0x9d, 0x78, 0x67,
	0xad, 0xb8, 0xb5, 0x06, 0xc7, 0x54, 0x2d, 0xc2, 0x29, 0xc0, 0x08, 0xbf, 0x25, 0x33, 0x7c, 0xc3,
	0xbf, 0x0a, 0x72, 0x04, 0xfb, 0x5a, 0xdc, 0x20, 0xb7, 0xd2, 0x66, 0x5c, 0x7c, 0x90, 0x63, 0x80,
	0x5c, 0xa1, 0x9c, 0xd0, 0x39, 0x72, 0x1d, 0xb4, 0x2d, 0xd5, 0x34, 0xc8, 0xc0, 0x00, 0xe4, 0x29,
	0xf8, 0x12, 0x33, 0xa1, 0x71, 0x42, 0x19, 0x93, 0xc1, 0xa1, 0xe5, 0xa1, 0x80, 0x06, 0x8c, 0x49,
	0x53, 0xe3, 0xa3, 0x14, 0xd3, 0x14, 0x33, 0x85, 0x9a, 0x3c, 0x84, 0x4a, 0xc2, 0x5c, 0x81, 0x4a,
	0xc2, 0x6c, 0xcd, 0x44, 0xa7, 0x18, 0x54, 0x5c, 0x4d, 0xf3, 0x41, 0x22, 0xa8, 0x2f, 0x0b, 0x4f,
	0x50, 0x3d, 0xa9, 0x9e, 0xf9, 0xfd, 0xa3, 0xa8, 0xbc, 0x0d, 0x97, 0x17, 0xaf, 0x45, 0xe1, 0x1f,
	0x0f, 0xea, 0x0e, 0xdc, 0x24, 0x7a, 0xe5, 0xc4, 0x57, 0xd0, 0x54, 0x9a, 0x6a, 0xcc, 0xcc, 0x10,
	0xa6, 0x96, 0xdf, 0x3f, 0xde, 0x95, 0x79, 0xb9, 0x16, 0xc5, 0x1b, 0x3d, 0xe9, 0xc3, 0x03, 0x25,
	0x72, 0x39, 0x43, 0xd7, 0x4d, 0x67, 0xa7, 0xd3, 0x2a, 0x62, 0xa7, 0x24, 0x3d, 0xd8, 0xb7, 0xa7,
	0x09, 0x6a, 0xb6, 0xd8, 0xe3, 0x5d, 0x96, 0xb7, 0x46, 0x10, 0x17, 0x3a, 0xb7, 0x99, 0xf6, 0x7a,
	0x33, 0xe1, 0x17, 0x68, 0x95, 0x65, 0xe4, 0x35, 0xf8, 0x5a, 0x52, 0x96, 0xe8, 0x44, 0x70, 0x9a,
	0xda, 0xe9, 0xfc, 0xfe, 0x69, 0x54, 0xfe, 0x0b, 0xae, 0x36, 0xbc, 0xf5, 0x8c, 0xa8, 0xa6, 0xe3,
	0xbd, 0xb8, 0xec, 0x1b, 0xd6, 0x5d, 0x5f, 0xe1, 0x05, 0xc0, 0x65, 0x3e, 0xcd, 0x12, 0xa5, 0x12,
	0xc1, 0xcd, 0x88, 0x12, 0x55, 0x9e, 0x6a, 0x17, 0xdc, 0xd9, 0x0a, 0x2e, 0x1a, 0x45, 0xb5, 0x14,
	0x5c, 0x61, 0xec, 0x94, 0xe1, 0x4f, 0x0f, 0x0e, 0xb6, 0x86, 0x27, 0x6d, 0xa8, 0xe6, 0x32, 0x75,
	0x9b, 0x37, 0xaf, 0xe4, 0x09, 0x34, 0x55, 0xa2, 0x71, 0xc2, 0x69, 0xb6, 0xbe, 0x71, 0xc3, 0x00,
	0x1f, 0x68, 0x86, 0xe4, 0x05, 0x10, 0x4b, 0xba, 0x33, 0x4e, 0x8a, 0xbb, 0x55, 0xad, 0xaa, 0x6d,
	0x18, 0x97, 0x7e, 0x65, 0x4f, 0x78, 0x0a, 0xad, 0x99, 0xe0, 0x1a, 0x95, 0x2e, 0xd2, 0x6a, 0x56,
	0xe7, 0x3b, 0xcc, 0x04, 0x86, 0x14, 0xda, 0xf7, 0xef, 0x48, 0x2e, 0xa0, 0x91, 0x51, 0x79, 0xc3,
	0xc4, 0x2d, 0xb7, 0xdb, 0xf5, 0xfb, 0xe1, 0xd6, 0x2d, 0xde, 0x3b, 0xf2, 0x1d, 0xd5, 0x78, 0x37,
	0x12, 0xb3, 0xdc, 0xb8, 0xc6, 0x7b, 0xf1, 0x7f, 0xd7, 0xd0, 0x2f, 0xfd, 0x3b, 0xe1, 0x73, 0x78,
	0xb4, 0xd3, 0x41, 0x08, 0xd4, 0x34, 0xde, 0x69, 0x37, 0xbc, 0x7d, 0x1f, 0xbe, 0xfc, 0xb5, 0xea,
	0x7a, 0xbf, 0x57, 0x5d, 0xef, 0xef, 0xaa, 0xeb, 0x7d, 0x0e, 0xe7, 0x89, 0x5e, 0xe4, 0xd3, 0x68,
	0x26, 0xb2, 0x9e, 0xed, 0xa0, 0x78, 0x9e, 0xf3, 0xf9, 0xf9, 0x5c, 0xf4, 0x6c, 0x37, 0xff, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x90, 0x94, 0x90, 0xf5, 0xf6, 0x03, 0x00, 0x00,
}
