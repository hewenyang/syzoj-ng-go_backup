// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primitive.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ObjectID struct {
	Id                   *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ObjectID) Reset()         { *m = ObjectID{} }
func (m *ObjectID) String() string { return proto.CompactTextString(m) }
func (*ObjectID) ProtoMessage()    {}
func (*ObjectID) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6fad380e09318f4, []int{0}
}

func (m *ObjectID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectID.Unmarshal(m, b)
}
func (m *ObjectID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectID.Marshal(b, m, deterministic)
}
func (m *ObjectID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectID.Merge(m, src)
}
func (m *ObjectID) XXX_Size() int {
	return xxx_messageInfo_ObjectID.Size(m)
}
func (m *ObjectID) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectID.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectID proto.InternalMessageInfo

func (m *ObjectID) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*ObjectID)(nil), "syzoj.primitive.ObjectID")
}

func init() { proto.RegisterFile("primitive.proto", fileDescriptor_c6fad380e09318f4) }

var fileDescriptor_c6fad380e09318f4 = []byte{
	// 114 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0xcc,
	0xcd, 0x2c, 0xc9, 0x2c, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2f, 0xae, 0xac,
	0xca, 0xcf, 0xd2, 0x83, 0x0b, 0x2b, 0x49, 0x71, 0x71, 0xf8, 0x27, 0x65, 0xa5, 0x26, 0x97, 0x78,
	0xba, 0x08, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x69, 0x70, 0x06, 0x31, 0x65,
	0xa6, 0x38, 0x69, 0x44, 0xa9, 0xa5, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea,
	0x83, 0x75, 0x42, 0x48, 0xdd, 0xbc, 0x74, 0xdd, 0xf4, 0x7c, 0xfd, 0xc4, 0x82, 0x02, 0xfd, 0xdc,
	0xfc, 0x94, 0xd4, 0x1c, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0xba, 0x0e, 0x96, 0x68, 0x00,
	0x00, 0x00,
}
