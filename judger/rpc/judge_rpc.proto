syntax = "proto2";

package syzoj.judge.rpc;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "primitive.proto";

option go_package = "github.com/syzoj/syzoj-ng-go/judger/rpc";

service Judge {
	rpc FetchTask (syzoj.judge.rpc.JudgeRequest) returns (syzoj.judge.rpc.FetchTaskResult) {}
	rpc SetTaskProgress (stream syzoj.judge.rpc.TaskProgress) returns (google.protobuf.Empty) {}
	rpc SetTaskResult (syzoj.judge.rpc.SetTaskResultMessage) returns (google.protobuf.Empty) {}
}

message JudgeRequest {
	optional syzoj.primitive.ObjectID judger_id = 3;
	optional string judger_token = 2;
}

message FetchTaskResult {
	optional bool success = 1;
	optional syzoj.judge.rpc.Task task = 2;
}

message Task {
	optional int64 task_tag = 1;
	optional syzoj.primitive.ObjectID problem_id = 5;
	optional google.protobuf.Any submission_content = 6;
	optional google.protobuf.Any problem_data = 7;
	optional string problem_type = 8;
}

message TaskProgress {
	
}

message SetTaskResultMessage {
	optional syzoj.primitive.ObjectID judger_id = 5;
	optional string judger_token = 2;
	optional int64 task_tag = 3;
	optional google.protobuf.Any result = 6;
}
